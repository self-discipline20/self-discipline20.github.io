/*1.加了box-sizing:border-box属性,padding和border的值就不会在影响元素的宽高,
    相当于把padding和border的值都算在content里.
  2.盒子模型会自动根据padding和border的值来调整content的值,就不需要手动调整.
  3.标准盒子模型,一般浏览器也都默认为标准盒子模型.即：box-sizing:content-box
  */
*{
    box-sizing: border-box;
}
body{
    margin: 0;
    padding: 0;
}
.header{
    padding: 10px;
    background: #1abc9c;
    color: white;
}
.header h1{
    font-size: 40px;
    font-family: "草书";
}
/*.header img{
    height: 200px;
    width: 500px;
    float: right;
    margin-bottom: 0%;
    margin-top: 0%;
}*/
/* 导航 */
.navbar{
    overflow: hidden;
    background-color: #666699;
}
/* 导航栏样式 */
.navbar a{
    float: left;
    display: block;/*此元素将显示为块级元素，此元素前后会带有换行符。*/
    color: white;
    text-align: center;
    padding: 14px 20px;
    text-decoration: none;/*默认。定义标准的文本。*/
}
/* 右侧链接*/
.navbar a.right{
    float: right;
}
/* 鼠标移动到链接的颜色 */
.navbar a:hover{
    background-color: #ddd;
    color: black;
}

/* 列容器 */
.row{
    /*
    display:-ms-flexbox的意思是CSS3弹性盒子弹性容器通过设置display属性的值为flex或-ms-flexbox将其定义为弹性容器。
    CSS3弹性盒，是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式。
    */
    display: -ms-flexbox;/*IE10*/
    /*
    display:flex 意思是弹性布局，它能够扩展和收缩 flex 容器内的元素， 以最大限度地填充可用空间。
    Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。
    */
    display: flex;
    /*设置无法容纳时，自动换行*/
    -ms-flex-wrap: wrap;/*IE10*/
    /*flex-wrap 属性规定flex容器是单行或者多行，同时横轴的方向决定了新行堆叠的方向。*/
    flex-wrap: wrap;
}
/* 创建两个列 */
/* 边栏 */
.side{
    -ms-flex: 30%;/* IE10 */
    flex: 30%;
    background-color: #f1f1f1;
    padding: 50px;
}
.side p{
    border:2px solid gray;
}
.side img{
    height:230px;
    width: 250px;
}
.button1 a{
    color: white;
}
.button1,.button2{
    background-color: #4CAF50; /* Green */
    border: none;
    color: white;
    padding: 15px 32px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
}


.main{
    -ms-flex: 70%;
    flex:70%;
    background-color: pink;
    padding:50px;
   
}
.main table{
    border-collapse: collapse;
    text-align: center;
    height: 400px;
    width: 700px;
    margin-left: 200px;
    font-size: 20px;
    font-family: STKaiti;
    border: 10px solid gray;
}
.td{
    padding:20px;
}
.footer{
    padding: 10px;
    text-align: center;
    background:#ddd;
}
.footer p,pre{
    font-size: 20px;
}
/* 响应式布局 - 在屏幕设备宽度尺寸小于 700px 时, 让两栏上下堆叠显示 */
@media  screen and (max-width:700px) {
    .row{
        flex-direction: column;
    }
}
/* 响应式布局 - 在屏幕设备宽度尺寸小于 400px 时, 让导航栏目上下堆叠显示 */
@media  screen and (max-width:400px) {
    .navbar a{
        float: none;
        width: 100%;
    }
}